package stepDef.trainee;

import com.epam.gym.dto.RegistrationResponse;
import com.epam.gym.dto.trainee.TraineeRegisterRequest;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.web.server.LocalServerPort;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

import java.util.Calendar;
import java.util.Date;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;


public class TraineeRegisterSuccessStepDefinition {

    @Autowired
    private RestTemplate restTemplate;
    @LocalServerPort
    private String port;
    private TraineeRegisterRequest traineeRegisterRequest;
    private ResponseEntity<RegistrationResponse> registrationResponseResponseEntity;
    private RegistrationResponse registrationResponse;

    @Given("a user sends the post request to the specified url with valid data")
    public void a_user_send_the_post_request_to_the_url() {
        traineeRegisterRequest = new TraineeRegisterRequest();
        traineeRegisterRequest.setFirstName("Tony");
        traineeRegisterRequest.setLastName("Soprano");
        Date dateOfBirth = new Date(70, Calendar.JUNE, 16);
        traineeRegisterRequest.setDateOfBirth(dateOfBirth);
        traineeRegisterRequest.setAddress("Walter Street,81");
        HttpEntity<TraineeRegisterRequest> requestEntity = new HttpEntity<>(traineeRegisterRequest);
        registrationResponseResponseEntity = restTemplate.exchange("http://localhost:"+ port +"/trainees",
                HttpMethod.POST,
                requestEntity,
                RegistrationResponse.class
                );

    }
    @When("the system validates the input information and saves the trainee and returns status code {int}")
    public void the_system_saves_the_trainee(int expected) {
        assertEquals(HttpStatus.valueOf(expected), registrationResponseResponseEntity.getStatusCode());
    }

    @Then("the system should respond with a successful registration response with login and password generated by the system")
    public void the_system_should_respond_with_a_successful_registration_response_with_login_and_password_generated_by_the_system() {
      this.registrationResponse = registrationResponseResponseEntity.getBody();
      assertNotNull(registrationResponse);
      assertNotNull(registrationResponse.getLogin());
      assertNotNull(registrationResponse.getPassword());
    }

}
